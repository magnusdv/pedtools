% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ped_subgroups.R
\name{ped_subgroups}
\alias{ped_subgroups}
\alias{founders}
\alias{nonfounders}
\alias{leaves}
\alias{males}
\alias{females}
\alias{typedMembers}
\alias{untypedMembers}
\alias{father}
\alias{mother}
\alias{children}
\alias{offspring}
\alias{spouses}
\alias{unrelated}
\alias{parents}
\alias{grandparents}
\alias{siblings}
\alias{cousins}
\alias{nephews_nieces}
\alias{ancestors}
\alias{commonAncestors}
\alias{descendants}
\alias{commonDescendants}
\title{Pedigree subgroups}
\usage{
founders(x, internal = FALSE)

nonfounders(x, internal = FALSE)

leaves(x, internal = FALSE)

males(x, internal = FALSE)

females(x, internal = FALSE)

typedMembers(x, internal = FALSE)

untypedMembers(x, internal = FALSE)

father(x, id, internal = FALSE)

mother(x, id, internal = FALSE)

children(x, id, internal = FALSE)

offspring(x, id, internal = FALSE)

spouses(x, id, internal = FALSE)

unrelated(x, id, internal = FALSE)

parents(x, id, internal = FALSE)

grandparents(x, id, degree = 2, internal = FALSE)

siblings(x, id, half = NA, internal = FALSE)

cousins(x, id, degree = 1, removal = 0, half = NA, internal = FALSE)

nephews_nieces(x, id, removal = 1, half = NA, internal = FALSE)

ancestors(x, id, inclusive = FALSE, internal = FALSE)

commonAncestors(x, ids, inclusive = FALSE, internal = FALSE)

descendants(x, id, inclusive = FALSE, internal = FALSE)

commonDescendants(x, ids, inclusive = FALSE, internal = FALSE)
}
\arguments{
\item{x}{A \code{\link[=ped]{ped()}} object.}

\item{internal}{A logical indicating whether \code{id} (or \code{ids}) refers to the
internal order.}

\item{id, ids}{A character (or coercible to such) with one or several ID
labels.}

\item{degree, removal}{Non-negative integers.}

\item{half}{a logical or NA. If TRUE (resp FALSE), only half (resp. full)
siblings/cousins/nephews/nieces are returned. If NA, both categories are
included.}

\item{inclusive}{A logical indicating whether an individual should be counted
among his or her own ancestors/descendants}
}
\value{
The functions \code{ancestors(x, id)} and \code{descendants(x, id)} return a
vector containing the IDs of all ancestors (resp. descendants) of the
individual \code{id} within the pedigree \code{x}. If \code{inclusive = TRUE}, \code{id} is
included in the output.

For \code{commonAncestors(x, ids)} and \code{commonDescendants(x, ids)}, a vector
containing the IDs of common ancestors to all of \code{ids}.

The functions \code{founders}, \code{nonfounders}, \code{males}, \code{females}, \code{leaves} each
return a vector containing the IDs of all pedigree members with the wanted
property. (Recall that a founder is a member without parents in the
pedigree, and that a leaf is a member without children in the pedigree.)

The functions \code{father}, \code{mother}, \code{cousins}, \code{grandparents},
\code{nephews_nieces}, \code{children}, \code{parents}, \code{siblings}, \code{spouses},
\code{unrelated}, each returns a vector containing the IDs of all pedigree
members having the specified relationship with \code{id}.
}
\description{
A collection of utility functions for identifying pedigree members with
certain properties.
}
\examples{

x = ped(id = 2:9,
         fid = c(0,0,2,0,4,4,0,2),
         mid = c(0,0,3,0,5,5,0,8),
         sex = c(1,2,1,2,1,2,2,2))
stopifnot(setequal(spouses(x, 2), c(3,8)),
          setequal(children(x, 2), c(4,9)),
          setequal(descendants(x, 2), c(4,6,7,9)),
          setequal(leaves(x), c(6,7,9)))

}
\author{
Magnus Dehli Vigeland
}
